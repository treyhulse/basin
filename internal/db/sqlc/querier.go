// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddUserToTenant(ctx context.Context, arg AddUserToTenantParams) error
	CreateAPIKey(ctx context.Context, arg CreateAPIKeyParams) (ApiKey, error)
	CreateCollection(ctx context.Context, arg CreateCollectionParams) (Collection, error)
	CreateField(ctx context.Context, arg CreateFieldParams) (Field, error)
	CreatePermission(ctx context.Context, arg CreatePermissionParams) (Permission, error)
	CreateTenant(ctx context.Context, arg CreateTenantParams) (Tenant, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAPIKey(ctx context.Context, id uuid.UUID) error
	DeleteCollection(ctx context.Context, id uuid.UUID) error
	DeleteField(ctx context.Context, id uuid.UUID) error
	DeletePermission(ctx context.Context, id uuid.UUID) error
	DeleteTenant(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	// Note: Customer queries removedm - customers are now managed through dynamic collections
	// The data_customers table is created automatically when the customers collection is created
	// API Key Management Queries
	GetAPIKeyByHash(ctx context.Context, keyHash string) (ApiKey, error)
	GetAPIKeyByID(ctx context.Context, id uuid.UUID) (ApiKey, error)
	GetAPIKeysByUser(ctx context.Context, userID uuid.UUID) ([]ApiKey, error)
	// User-Tenant Relationship Queries
	GetAllTenants(ctx context.Context) ([]Tenant, error)
	GetCollection(ctx context.Context, id uuid.UUID) (Collection, error)
	// Schema Management Queries
	GetCollections(ctx context.Context) ([]Collection, error)
	GetField(ctx context.Context, id uuid.UUID) (Field, error)
	GetFields(ctx context.Context) ([]Field, error)
	GetFieldsByCollection(ctx context.Context, collectionID uuid.NullUUID) ([]Field, error)
	GetPermissionsByRole(ctx context.Context, roleID uuid.NullUUID) ([]Permission, error)
	GetPermissionsByRoleAndAction(ctx context.Context, arg GetPermissionsByRoleAndActionParams) ([]Permission, error)
	GetPermissionsByRoleAndTable(ctx context.Context, arg GetPermissionsByRoleAndTableParams) ([]Permission, error)
	// Enhanced Permission Queries with Tenant Support
	GetPermissionsByRoleAndTenant(ctx context.Context, arg GetPermissionsByRoleAndTenantParams) ([]Permission, error)
	GetPermissionsByUserAndTenant(ctx context.Context, arg GetPermissionsByUserAndTenantParams) ([]Permission, error)
	GetTenant(ctx context.Context, id uuid.UUID) (Tenant, error)
	GetTenantByID(ctx context.Context, id uuid.UUID) (Tenant, error)
	GetTenantBySlug(ctx context.Context, slug string) (Tenant, error)
	// Tenant Management Queries
	GetTenants(ctx context.Context) ([]Tenant, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	GetUserDefaultTenant(ctx context.Context, userID uuid.UUID) (Tenant, error)
	GetUserRoles(ctx context.Context, userID uuid.UUID) ([]Role, error)
	GetUserTenant(ctx context.Context, arg GetUserTenantParams) (UserTenant, error)
	GetUserTenants(ctx context.Context, userID uuid.UUID) ([]Tenant, error)
	GetUserWithTenant(ctx context.Context, id uuid.UUID) (GetUserWithTenantRow, error)
	// Enhanced User Queries with Tenant Support
	GetUsersByTenant(ctx context.Context, tenantID uuid.NullUUID) ([]User, error)
	RemoveUserFromTenant(ctx context.Context, arg RemoveUserFromTenantParams) error
	UpdateAPIKey(ctx context.Context, arg UpdateAPIKeyParams) (ApiKey, error)
	UpdateAPIKeyLastUsed(ctx context.Context, id uuid.UUID) error
	UpdateCollection(ctx context.Context, arg UpdateCollectionParams) (Collection, error)
	UpdateField(ctx context.Context, arg UpdateFieldParams) (Field, error)
	UpdatePermission(ctx context.Context, arg UpdatePermissionParams) (Permission, error)
	UpdateTenant(ctx context.Context, arg UpdateTenantParams) (Tenant, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
